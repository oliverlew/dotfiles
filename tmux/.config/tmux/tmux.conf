####################
# General Settings #
####################
# prefix key(s)
set -g prefix C-a

# 256 colors
# also keep the TERM be screen* or tmux* all the time or applications
# might have display problems, see https://github.com/tmux/tmux/wiki/FAQ
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",screen-256color:Tc"

# mouse support
set -g mouse on

# set key mode to vi
set -g mode-keys vi

# history
set -g history-limit 10000

# start numbering windows from 1 instead of zero
set -g base-index 1
# re-number windows when one is closed
set -g renumber-windows on

# time to wait for ESC key
set -g escape-time 0
# press a key to close display message
set -g display-time 3000
# display pane numbers
set -g display-panes-time 3000
# wait longer for continous keybindings
set -g repeat-time 800
# update interval
set -g status-interval 3

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity off


###############
# Keybindings #
###############

# key mapping to reload config file
bind -N "Reload configuration file" r source-file ~/.config/tmux/tmux.conf

# more vim keybindings in copy mode
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi V send-keys -X select-line
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle \; send-keys -X begin-selection
# copy to system clipboard
bind -T copy-mode-vi MouseDown1Pane send-keys -X clear-selection
bind -T copy-mode-vi MouseDown3Pane send-keys -X cancel
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe 'xclip -in -selection clipboard'
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# open panes in the current directory
bind -N "Split window vertically in pwd"   v split-window -c "#{pane_current_path}"
bind -N "Split window vertically in pwd"   - split-window -c "#{pane_current_path}"
bind -N "Split window horizontally in pwd" h split-window -c "#{pane_current_path}" -h
bind -N "Split window horizontally in pwd" | split-window -c "#{pane_current_path}" -h

# bind vim-like key mapping to move between panes and windows
bind -N "Go to the pane above"        -r C-k select-pane -U
bind -N "Go to the pane below"        -r C-j select-pane -D
bind -N "Go to the pane to the left"  -r C-h select-pane -L
bind -N "Go to the pane to the right" -r C-l select-pane -R
bind -N "Go to the next window"       -r C-n next-window
bind -N "Go to the previous window"   -r C-p previous-window

# some other key bindings from tmux-pain-control plugin
bind -N "Swap the current window with the previous window" -r < swap-window -t -1
bind -N "Swap the current window with the next window"     -r > swap-window -t +1

# resize panes
bind -N "Resize current pane down by 2 lines" -r J resize-pane -D 2
bind -N "Resize current pane up by 2 lines"   -r K resize-pane -U 2
bind -N "Resize current pane left by 4 rows"  -r H resize-pane -L 4
bind -N "Resize current pane right by 4 rows" -r L resize-pane -R 4

# Enable screen-like C-a C-a moving to last window
bind -N "Go to the last window" C-a last-window
bind -N "Toggle status bar"     C-b set-option status


##############
# Status bar #
##############

# set the style
set -g status-style bg=default,bold
set -g message-command-style fg=colour3,bg=colour8
set -g message-style bg=colour8
set -g pane-border-style fg=colour4,bg=default
set -g pane-active-border-style fg=colour3,bg=default

# statusline
set -g status-left "#{?client_prefix,[#S], #S }"
set -g status-left-style fg=colour14,bg=default
set -g status-right "#(whoami)@#H "

setw -g window-status-separator "  "
setw -g window-status-style fg=colour7,bg=default
setw -g window-status-activity-style fg=colour1,bg=default
setw -g window-status-current-style fg=colour3,bg=default
setw -g window-status-format "#I#{?window_zoomed_flag,Z, }#W"
setw -g window-status-current-format "#I#{?window_zoomed_flag,Z, }#W"

set -g status-position "bottom"
set -g status-justify "centre"
