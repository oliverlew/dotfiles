#!/bin/sh

usage() {
    cat << EOF
Usage: $(basename "$0") [ -B ] [ -abcftuFTU ] [ -123 ]

Options:
    -B use byte as unit
    -a show available
    -b show buffer
    -c show cache
    -f show free
    -s show shared
    -t show total
    -u show used
    -F show swap free
    -T show swap total
    -U show swap used
    -1/2/3 control the precision of decimals
EOF
}

while getopts "123abcfhstuBFUT" arg; do
    case "$arg" in
        a|b|c|f|F|s|t|T|u|U) flag_target=$arg;;
        B) flag_byte=1;;
        1|2|3) precision=$arg;;
        h|*) usage; exit 0;;
    esac
done

# read mem info
while IFS=': ' read -r key value _; do
    eval "${key%(*}=$value"
done < /proc/meminfo

info() {
    for keyword in "$@"; do
        # An arithmetic hack, sign + positive = sign * positive in $(())
        mem=$((mem + (${keyword%${keyword#-}} + ${keyword#-})))
    done
    # format
    [ -n "$flag_byte" ] && echo "$mem" && return
    for unit in KB MB GB TB; do
        [ "$mem" -lt 1024 ] && echo "$mem.${decimal:-0}$unit" && break
        decimal=$(printf "%03d" "$((mem % 1024))" | cut -c -"${precision:-3}")
        mem=$((mem / 1024))
    done
}

case "$flag_target" in
    a) info MemAvailable ;;
    b) info Buffers ;;
    c) info Cached SReclaimable ;;
    f) info MemFree ;;
    F) info SwapFree ;;
    s) info Shmem ;;
    t) info MemTotal ;;
    T) info SwapTotal ;;
    u) info MemTotal -MemFree -Buffers -Cached -SReclaimable ;;
    U) info SwapTotal -SwapFree ;;
esac
